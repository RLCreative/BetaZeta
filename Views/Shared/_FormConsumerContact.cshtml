@model Zeta.Models.Person

<script src="@Url.Content("~/Scripts/jquery-1.6.2.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend></legend>
        <div class="form-label">
            @Html.LabelFor(model => model.FirstName, "First Name")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.FirstName, new { @style = "width:200px;" })
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>
        <div class="form-label">
            @Html.LabelFor(model => model.LasstName, "Last Name")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.LasstName, new { @style = "width:200px;" })
            @Html.ValidationMessageFor(model => model.LasstName)
        </div>
        <div class="form-label">
            @Html.LabelFor(model => model.Address, "Address")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Address, new { @style = "width:300px;" })
            @Html.ValidationMessageFor(model => model.Address)
        </div>
        <div class="form-label">
            @Html.LabelFor(model => model.Address2, "Suite/Apt")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Address2, new { @style = "width:50px;" })
            @Html.ValidationMessageFor(model => model.Address2)
        </div>
        <div class="form-label">
            @Html.LabelFor(model => model.City, "City")
        </div>

        <div class="editor-field">
            @Html.TextBoxFor(model => model.City, new { @style = "width:200px;" })
            @Html.ValidationMessageFor(model => model.City)
        </div>

        <div class="form-label">
            @Html.LabelFor(model => model.StateList, "State")
        </div>

        <div class="editor-field">
            @Html.TextBoxFor(model => model.StateList,  new { @style = "width:50px;" })
            @Html.ValidationMessageFor(model => model.StateList)
        </div>
        <div class="form-label">
            @Html.LabelFor(model => model.Zip, "ZIP® Code")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Zip, new { @style = "width:100px;" })
            @Html.ValidationMessageFor(model => model.Zip)
        </div>
        <div class="form-label">
            @Html.LabelFor(model => model.Phone, "Phone")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Phone, new { @style = "width:100px;", placeholder = "Numbers Only" })
            @Html.ValidationMessageFor(model => model.Phone)
        </div>
        <div class="form-label">
            @Html.LabelFor(model => model.Email, "E-mail")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Email, new { @style = "width:200px;" })
            @Html.ValidationMessageFor(model => model.Email)
        </div>
    </fieldset>

    <div style="margin-top: 20px;">
        <input type="submit" value="Submit" class="button" />
    </div>
    <script type="text/javascript">
    $(function () {
        $('#fruit').change(function()
        {
            var value = this.value;
            var txt = this.textContent;
            document.getElementById('label1').textContent = value;
            document.getElementById('label2').textContent = txt;            
        });
    });</script>
}