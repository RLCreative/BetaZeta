@{   ViewBag.SubTitle = "Media Inquiry";
}
<hgroup class="title">
    <h1>@ViewBag.SubTitle</h1>
</hgroup>
@model Zeta.Models.Media
@section script{
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
    <script type="text/javascript" src="../../Scripts/validator.js"></script>

}
<article>
    @using (Html.BeginForm("Media", "Email", FormMethod.Post))
    {
        <section>
            <div>
                <p>
                    We welcome members of the print and online media to request information about our
                    brands, new launches, and to acquire images and samples. We will be happy to assist
                    you in any way we can! Just submit your request using this form. Thank you for your
                    interest!
                </p>
            </div>
        </section>
        <section>
            <div id="ContactInfo">
                @Html.ValidationSummary(true)                
                <fieldset>
                <legend></legend>

                @Html.LabelFor(model => model.FirstName, "First Name", new { @class = "contact" })
                @Html.ValidationMessageFor(model => model.FirstName)

                <div class="editor-field">
                    @Html.TextBoxFor(model => model.FirstName, new { @style = "width:250px;" })
                </div>

                @Html.LabelFor(model => model.LastName, "Last Name", new { @class = "contact" })
                @Html.ValidationMessageFor(model => model.LastName)

                <div class="editor-field">
                    @Html.TextBoxFor(model => model.LastName, new { @style = "width:250px;" })
                </div>
                <div style="display: inline-block;">
                    <div style="float: left;">
                        @Html.LabelFor(model => model.Address, "Address", new { @class = "contact" })
                        @Html.ValidationMessageFor(model => model.Address)

                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Address, new { @style = "width:250px;" })
                        </div>
                    </div>
                    <div style="float:left;">
                        @Html.LabelFor(model => model.Address2, "Suite/Apt", new { @class = "contact" })

                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Address2, new { @style = "width:50px;" })
                            @Html.ValidationMessageFor(model => model.Address2)
                        </div>
                    </div>
                </div>
                <div style="display: block;">
                    @Html.LabelFor(model => model.City, "City", new { @class = "contact" })
                    @Html.ValidationMessageFor(model => model.City)

                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.City, new { @style = "width:250px;" })
                    </div>
                </div>
                <div style="display: inline-block;">
                    <div style="float: left;">
                        @Html.LabelFor(model => model.State, "State", new { @class = "contact" })
                        @Html.ValidationMessageFor(model => model.State)

                        <div class="editor-field">
                            <select id="ddlState" name="ddlState" style="width: 100px;" onchange="updateState();">
                                <option value="">Select</option>
                                <option value="AL">AL</option>
                                <option value="AK">AK</option>
                                <option value="AZ">AZ</option>
                                <option value="AR">AR</option>
                                <option value="CA">CA</option>
                                <option value="CO">CO</option>
                                <option value="CT">CT</option>
                                <option value="DC">DC</option>
                                <option value="DE">DE</option>
                                <option value="FL">FL</option>
                                <option value="GA">GA</option>
                                <option value="HI">HI</option>
                                <option value="ID">ID</option>
                                <option value="IL">IL</option>
                                <option value="IN">IN</option>
                                <option value="IA">IA</option>
                                <option value="KS">KS</option>
                                <option value="KY">KY</option>
                                <option value="LA">LA</option>
                                <option value="ME">ME</option>
                                <option value="MD">MD</option>
                                <option value="MA">MA</option>
                                <option value="MI">MI</option>
                                <option value="MN">MN</option>
                                <option value="MS">MS</option>
                                <option value="MO">MO</option>
                                <option value="MT">MT</option>
                                <option value="NE">NE</option>
                                <option value="NV">NV</option>
                                <option value="NH">NH</option>
                                <option value="NJ">NJ</option>
                                <option value="NM">NM</option>
                                <option value="NY">NY</option>
                                <option value="NC">NC</option>
                                <option value="ND">ND</option>
                                <option value="OH">OH</option>
                                <option value="OK">OK</option>
                                <option value="OR">OR</option>
                                <option value="PA">PA</option>
                                <option value="RI">RI</option>
                                <option value="SC">SC</option>
                                <option value="SD">SD</option>
                                <option value="TN">TN</option>
                                <option value="TX">TX</option>
                                <option value="UT">UT</option>
                                <option value="VT">VT</option>
                                <option value="VA">VA</option>
                                <option value="WA">WA</option>
                                <option value="WV">WV</option>
                                <option value="WI">WI</option>
                                <option value="WY">WY</option>
                                <option value="">----</option>
                                <option value="AB">AB</option>
                                <option value="BC">BC</option>
                                <option value="MB">MB</option>
                                <option value="NB">NB</option>
                                <option value="NF">NF</option>
                                <option value="NS">NS</option>
                                <option value="NT">NT</option>
                                <option value="ON">ON</option>
                                <option value="QC">QC</option>
                                <option value="SK">SK</option>
                            </select>
                            @Html.TextBoxFor(model => model.State, "State", new { @style = "width:150px; display: none;" })
                        </div>
                    </div>
                    <div style="float: left;">
                        @Html.LabelFor(model => model.Zip, "ZIP® Code", new { @class = "contact" })
                        @Html.ValidationMessageFor(model => model.Zip)

                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Zip, new { @style = "width:100px;" })
                        </div>
                    </div>
                </div>
                <div style="display: block;">
                @Html.LabelFor(model => model.State, "Country", new { @class = "contact" })
                @Html.ValidationMessageFor(model => model.Country)

                <div class="editor-field">
                    <select id="ddlCountry" name="ddlCountry" style="width: 150px;" onchange="updateCountry();">
                        <option value="">--------------------</option>
                        <option value="US">United States</option>
                        <option value="CA">Canada</option>
                    </select>
                    @Html.TextBoxFor(model => model.Country, "Country", new { @style = "width:150px; display: none;" })
                </div>
                    </div>
                @Html.LabelFor(model => model.Phone, "Phone", new { @class = "contact" })
                @Html.ValidationMessageFor(model => model.Phone)

                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Phone, new { @style = "width:100px;", placeholder = "Numbers Only" })
                </div>

                @Html.LabelFor(model => model.Email, "E-mail", new { @class = "contact" })
                @Html.ValidationMessageFor(model => model.Email)

                <div class="editor-field">
                @Html.TextBoxFor(model => model.Email, new { @style = "width:300px;" })
                </div>
            </fieldset>
            </div>
        </section>
        <section>
             <hr />
            <label class="form">What brands interest you?</label>

            <select id="ddlwhatBrands" onchange="updateBrands();">
                 <option value="">----------- Select -----------</option>
                <option value="BambinoMio">Bambino Mio&reg;</option>
                <option value="Cybex">Cybex&reg;</option>
                <option value="Dekor">D&eacute;kor&reg;</option>
                <option value="Lascal">Lascal&reg;</option>
                <option value="MyCarryPotty">My Carry Potty&trade;</option>
            </select>

            @Html.TextBoxFor(model => model.whatBrands, "What Brands", new { @style = "display: none;" })
            @Html.ValidationMessageFor(model => model.whatBrands)

           @* <label class="form">
                What specific products you are interested in?</label>

            <textarea id="txtProducts" style="width: 300px; min-height: 100px;"></textarea>*@


            <label class="form">Your main reason for contacting us</label>

            <select id="ddlContactReason" onchange="updateContactReason();">
                <option value="0">----------- Select -----------</option>
                <option value="Editorial">Press Kit Request</option>
                <option value="Editorial">Editorial Opportunity</option>
                <option value="Review">Product Review</option>
                <option value="Television">Product Placement for TV or Movie</option>
                <option value="Advertising">Advertising</option>
                <option value="Other">Other</option>
            </select>

            @Html.TextBoxFor(model => model.ContactReason, "Contact Reason", new { @style = "display: none;" })
            @Html.ValidationMessageFor(model => model.ContactReason)

            @* <label class="form">Any additional information about your request</label>

            <input type="text" id="txtRequestComments" style="width: 300px; min-height: 100px;">*@
            <hr />
            <label class="contact">Are you a blogger?<span style="display: none;" class="required" id="RequiredMessageBlog">&nbsp;Required</span></label>
            
            <div class="editor-field">
            <input name="blog" type="radio" value="yes" id="yes" onclick="blogYes();" />Yes
            <input name="blog" type="radio" value="no" id="no" onclick="blogNo();" style="margin-left:10px;" />No
            </div>
        </section>
@*------- BLOGGER SECTION --------*@
        <section>
            <div id="desc" style="display: none;">

                <hr />
                <h2>Additional Blogger Information</h2>

                <p>
                    We receive a large volume of product requests for testing and reviewing.
                While we are always happy to send product information and images, sample requests
                go through a selection process. To help us decide if your audience and size is a
                good match, please tell us a little about your site.
                </p>

                @Html.LabelFor(model => model.YearStarted, "Year Started", new { @class = "contact" })
                @Html.ValidationMessageFor(model => model.YearStarted)

                <div class="editor-field">
                    @Html.TextBoxFor(model => model.YearStarted, new { @style = "width:50px;" })
                </div>

                @Html.LabelFor(model => model.WebURL, "Web URL", new { @class = "contact" })
                @Html.ValidationMessageFor(model => model.WebURL)

                <div class="editor-field">
                    @Html.TextBoxFor(model => model.WebURL, new { @style = "width:300px;" })
                   
                </div>
                <hr />
                <h3>Traffic Numbers (from Alexa&reg;, Compete&reg;, or Google&reg; Analytics)</h3>
                @Html.LabelFor(model => model.MonthlyVisitors, "Monthly Visitors", new { @class = "contact" })
                @Html.ValidationMessageFor(model => model.MonthlyVisitors)

                <div class="editor-field">
                    @Html.TextBoxFor(model => model.MonthlyVisitors, new { @style = "width:50px;" })
                </div>

                @Html.LabelFor(model => model.UniqueVisitors, "Unique Visitors", new { @class = "contact" })
                @Html.ValidationMessageFor(model => model.UniqueVisitors)

                <div class="editor-field">
                    @Html.TextBoxFor(model => model.UniqueVisitors, new { @style = "width:50px;" })
                </div>

                @Html.LabelFor(model => model.PageViews, "Page Views", new { @class = "contact" })
                @Html.ValidationMessageFor(model => model.PageViews)

                <div class="editor-field">
                    @Html.TextBoxFor(model => model.PageViews, new { @style = "width:50px;" })
                </div>

                @Html.LabelFor(model => model.PageRanking, "Page Ranking", new { @class = "contact" })
                @Html.ValidationMessageFor(model => model.PageRanking)

                <div class="editor-field">
                    @Html.TextBoxFor(model => model.PageRanking, new { @style = "width:50px;" })
                </div>
                <hr />
                <h3>Social Media Activity</h3>

                @Html.LabelFor(model => model.Facebook, "Facebook® Likes", new { @class = "contact" })
                @Html.ValidationMessageFor(model => model.Facebook)

                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Facebook, new { @style = "width:50px;" })
                </div>

                @Html.LabelFor(model => model.Twitter, "Twitter® Followers", new { @class = "contact" })
                @Html.ValidationMessageFor(model => model.Facebook)

                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Twitter, new { @style = "width:50px;" })
                </div>

                <label class="form">
                    Who are your testers?
                </label>
                <div class="editor-field">
                    <textarea id="Tester" style="width: 300px; min-height: 100px;"></textarea>
                </div>

                <label class="form">
                    Anything else you wish to tell us about why we should choose your site?
                </label>
                <div class="editor-field">
                    <textarea id="txtWhy" style="width: 300px; min-height: 100px;"></textarea>
                </div>
            </div>
        </section>
        <div style="margin-top: 20px;">
            <input type="submit" value="Submit" class="button" onclick="valMedia();" />
        </div>
    }
</article>
<aside><img src="~/Images/rl-media.png" /></aside>

<script type="text/javascript">
    function blogYes() {
        if (document.getElementById('yes').value == 'yes') {
            document.getElementById('desc').style.display = '';
            //document.getElementById('Blogger').value = 'yes';
            document.getElementById('YearStarted').value = '';
            document.getElementById('WebURL').value = '';
            document.getElementById('MonthlyVisitors').value = '';
            document.getElementById('UniqueVisitors').value = '';
            document.getElementById('PageViews').value = '';
            document.getElementById('PageRanking').value = '';
            document.getElementById('Facebook').value = '';
            document.getElementById('Twitter').value = '';
        }
    };

    function blogNo() {
        //if (document.getElementById('no').value == 'no') 
        {
            document.getElementById('no').value == 'no';
            document.getElementById('desc').style.display = 'none';
            //document.getElementById('Blogger').value = 'no';
            document.getElementById('YearStarted').value = '9999';
            document.getElementById('WebURL').value = 'www.nourl.com';
            document.getElementById('MonthlyVisitors').value = '999';
            document.getElementById('UniqueVisitors').value = '999';
            document.getElementById('PageViews').value = '999';
            document.getElementById('PageRanking').value = '999';
            document.getElementById('Facebook').value = '999';
            document.getElementById('Twitter').value = '999';
        }
    };

    //var refreshValidation = function() {
    //    var formToRefresh = $('form');
    //    formToRefresh.each(function () {
    //        var form = $(this);
    //        form.removeData('validator');
    //        $.validator.unobtrusive.parse(form);

    //    });
    //};


    function valMedia() {
        if ((document.getElementById('yes').checked != true) && (document.getElementById('no').checked != true)) {
            document.getElementById('RequiredMessageBlog').style.display = '';
            return false;
        }
        else {
            document.getElementById('RequiredMessageBlog').style.display = 'none';
        }
    };
    $(document).ready(function () {

        $('input').focus(function () {
            $(this).addClass("inputglow");
        });

        $('input').blur(function () {
            $(this).removeClass("inputglow");
        });
        $('textarea').focus(function () {
            $(this).addClass("inputglow");
        });

        $('textarea').blur(function () {
            $(this).removeClass("inputglow");
        });
    });
</script>
